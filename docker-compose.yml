---
version: '3'
services:
  reproxy:
    image: traefik:v2.9
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.watch
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.watch=true
      - --providers.file.directory=/config
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls=true
      - --experimental.http3=true
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - ./conf:/config
      - ./ssl:/ssl:ro
    ports: [80:80, 443:443]
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.traefik.tls=true
        - traefik.http.routers.traefik.entrypoints=https
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.routers.traefik.rule=Host(`traefik.devops33.site`)
        - traefik.http.services.reproxy.loadbalancer.server.port=9999
  front-end:
    image: weaveworksdemos/front-end:0.3.12
    hostname: front-end
    restart: always
    cap_drop: [all]
    read_only: true
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  edge-router:
    image: weaveworksdemos/edge-router:0.1.1
    cap_drop: [all]
    cap_add: [NET_BIND_SERVICE, CHOWN, SETGID, SETUID, DAC_OVERRIDE]
    read_only: true
    tmpfs: ['/var/run:rw,noexec,nosuid']
    hostname: edge-router
    restart: always
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
      labels:
        - traefik.enable=true
        - traefik.http.routers.edge-router.tls=true
        - traefik.http.routers.edge-router.entrypoints=https
        - traefik.http.routers.edge-router.rule=Host(`socks.devops33.site`)
        - traefik.http.services.edge-router.loadbalancer.server.port=80
  catalogue:
    image: weaveworksdemos/catalogue:0.3.5
    hostname: catalogue
    restart: always
    cap_drop: [all]
    cap_add: [NET_BIND_SERVICE]
    read_only: true
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  catalogue-db:
    image: weaveworksdemos/catalogue-db:0.3.0
    hostname: catalogue-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=asldkflsadfh
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=socksdb
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  carts:
    image: weaveworksdemos/carts:0.4.8
    hostname: carts
    restart: always
    cap_drop: [all]
    cap_add: [NET_BIND_SERVICE]
    read_only: true
    tmpfs: ['/tmp:rw,noexec,nosuid']
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        -Dspring.zipkin.enabled=false
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  carts-db:
    image: mongo:3.4
    hostname: carts-db
    restart: always
    cap_drop: [all]
    cap_add: [CHOWN, SETGID, SETUID]
    read_only: true
    tmpfs: ['/tmp:rw,noexec,nosuid']
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  orders:
    image: weaveworksdemos/orders:0.4.7
    hostname: orders
    restart: always
    cap_drop: [all]
    cap_add: [NET_BIND_SERVICE]
    read_only: true
    tmpfs: ['/tmp:rw,noexec,nosuid']
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        -Dspring.zipkin.enabled=false
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  orders-db:
    image: mongo:3.4
    hostname: orders-db
    restart: always
    cap_drop: [all]
    cap_add: [CHOWN, SETGID, SETUID]
    read_only: true
    tmpfs: ['/tmp:rw,noexec,nosuid']
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  shipping:
    image: weaveworksdemos/shipping:0.4.8
    hostname: shipping
    restart: always
    cap_drop: [all]
    cap_add: [NET_BIND_SERVICE]
    read_only: true
    tmpfs: ['/tmp:rw,noexec,nosuid']
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        -Dspring.zipkin.enabled=false
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  queue-master:
    image: weaveworksdemos/queue-master:0.3.1
    hostname: queue-master
    volumes: [/var/run/docker.sock:/var/run/docker.sock]
    restart: always
    cap_drop: [all]
    cap_add: [NET_BIND_SERVICE]
    read_only: true
    tmpfs: ['/tmp:rw,noexec,nosuid']
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  rabbitmq:
    image: rabbitmq:3.6.8
    hostname: rabbitmq
    restart: always
    cap_drop: [all]
    cap_add: [CHOWN, SETGID, SETUID, DAC_OVERRIDE]
    read_only: true
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  payment:
    image: weaveworksdemos/payment:0.4.3
    hostname: payment
    restart: always
    cap_drop: [all]
    cap_add: [NET_BIND_SERVICE]
    read_only: true
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  user:
    image: weaveworksdemos/user:0.4.4
    hostname: user
    restart: always
    cap_drop: [all]
    cap_add: [NET_BIND_SERVICE]
    read_only: true
    environment: [MONGO_HOST=user-db:27017]
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  user-db:
    image: weaveworksdemos/user-db:0.4.0
    hostname: user-db
    restart: always
    cap_drop: [all]
    cap_add: [CHOWN, SETGID, SETUID]
    read_only: true
    tmpfs: ['/tmp:rw,noexec,nosuid']
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
  user-sim:
    image: weaveworksdemos/load-test:0.1.1
    cap_drop: [all]
    read_only: true
    hostname: user-simulator
    command: -d 60 -r 200 -c 2 -h edge-router
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
